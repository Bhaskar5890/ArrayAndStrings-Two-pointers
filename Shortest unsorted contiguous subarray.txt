public class Solution {
    public int FindUnsortedSubarray(int[] nums) 
    {
        int max = Int32.MinValue;
        int min = Int32.MaxValue;
        
        for(int i = 1; i < nums.Length; i++)
        {
            if(nums[i] < nums[i-1])
            {
                min = Math.Min(min, nums[i]);
            }
        }

        for(int i = nums.Length-2; i >= 0; i--)
        {
            if(nums[i] > nums[i+1])
            {
                max = Math.Max(max, nums[i]);
            }
        }
        

        int startIndex = 0;
        int endIndex = 0;
        
        for(int i = 0; i < nums.Length; i++)
        {
            if(nums[i] > min)
            {
                startIndex = i;
                break;
            }
        }

        for(int i = nums.Length-1; i >= 0; i--)
        {
            if(nums[i] < max)
            {
                endIndex = i;
                break;
            }
        }

        if(startIndex == 0 && endIndex == 0)
        {
            return 0;
        }
        return endIndex-startIndex +1;
    }
}