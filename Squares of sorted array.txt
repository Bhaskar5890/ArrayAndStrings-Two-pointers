public class Solution {
    public int[] SortedSquares(int[] nums) 
    {
        int positiveIndex = nums.Length;
        for(int i = 0; i < nums.Length; i++)
        {
            if(nums[i] > 0)
            {
                positiveIndex = i;
                break;
            }
        }
        int negativeIndex = positiveIndex-1;
        int[] res = new int[nums.Length];
        int index = 0;
        while (negativeIndex >= 0 && positiveIndex < nums.Length)
        {
            if (Math.Abs(nums[negativeIndex]) < nums[positiveIndex])
            {
                res[index] = nums[negativeIndex] * nums[negativeIndex];
                negativeIndex--;
            }
            else
            {
                res[index] = nums[positiveIndex] * nums[positiveIndex];
                positiveIndex++;
            }
            index++;
        }

        while (negativeIndex >= 0)
        {
            res[index] = nums[negativeIndex] * nums[negativeIndex];
            negativeIndex--;
            index++;
        }

        while (positiveIndex < nums.Length)
        {
            res[index] = nums[positiveIndex] * nums[positiveIndex];
            positiveIndex++;
            index++;
        }
        return res;
    }
}